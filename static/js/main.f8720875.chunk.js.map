{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","sortType","NONE","isReversed","visibleGoods","goods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,SAAUL,EAASM,KACnBC,YAAY,GAJhB,4CAOE,WAAU,IAAD,OACDC,EAvCV,SACEC,EACAJ,EACAE,GAEA,IAAMC,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKL,EAASa,QACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKZ,EAASe,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITT,GACFC,EAAaS,UAGRT,EAiBgBU,CACnBjB,EACAkB,KAAKhB,MAAME,SACXc,KAAKhB,MAAMI,YAGb,OACE,qBAAKa,UAAU,MAAf,SACID,KAAKhB,MAAMC,UAYT,qCACE,wBACEiB,KAAK,SACLC,QAAS,WACP,EAAKC,SACH,CAAElB,SAAUL,EAASa,QAASN,YAAY,KAJhD,iCAWA,wBACEc,KAAK,SACLC,QAAS,WACP,EAAKC,SACH,CAAElB,SAAUL,EAASe,OAAQR,YAAY,KAJ/C,4BAWA,wBACEc,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAAApB,GAAK,MAAK,CAAEI,YAAaJ,EAAMI,gBAHjD,qBASA,wBACEc,KAAK,SACLC,QAAS,WACP,EAAKC,SACH,CAAElB,SAAUL,EAASM,KAAMC,YAAY,KAJ7C,mBAWA,oBAAIa,UAAU,QAAd,SACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,6BACGA,GADMA,WAvDf,wBACEJ,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEnB,WAAW,KAH/B,yBAlBZ,GAAyBsB,IAAMC,WClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f8720875.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      this.state.sortType,\n      this.state.isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {!this.state.isStarted\n          ? (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ isStarted: true });\n              }}\n            >\n              Start\n            </button>\n          )\n          : (\n            <>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState(\n                    { sortType: SortType.ALPABET, isReversed: false },\n                  );\n                }}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState(\n                    { sortType: SortType.LENGTH, isReversed: false },\n                  );\n                }}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState(state => ({ isReversed: !state.isReversed }));\n                }}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState(\n                    { sortType: SortType.NONE, isReversed: false },\n                  );\n                }}\n              >\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {visibleGoods.map(good => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}